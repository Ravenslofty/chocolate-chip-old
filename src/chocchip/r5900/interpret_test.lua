local bit = require("bit")

local tobit, tohex = bit.tobit, bit.tohex

local interpret = require("chocchip.r5900.interpret")

local function run(f, cpu, fun, rs, rt, res1, res0)
    f()
    assert(tobit(cpu.gprs[10][0]) == res0 and tobit(cpu.gprs[10][1]) == res1,
        string.format("%s %s, %s: expected 0x%s%s, got 0x%s%s",
            fun, tohex(rs), tohex(rt),
            tohex(res1), tohex(res0),
            tohex(cpu.gprs[10][1]), tohex(cpu.gprs[10][0])
    ))
end

-- Register/register op
local function testrr(fun, rs, rt, rd, res3, res2, res1, res0)
    cpu = interpret:new(0)
    cpu:write_gpr32_i64(8, rs)
    cpu:write_gpr32_i64(9, rt)
    cpu:write_gpr32_i64(10, rd)
    local f = assert(load("cpu:" .. fun .. "(0, 8, 9, 10, 0, 0x1337, 0)"))
    local ok, _, _ = xpcall(function() run(f, cpu, fun, rs, rt, res1, res0) end, function(err) print(fun, err) end)
    if ok then
        print(fun, "OK")
    else
        print(fun, "FAIL")
    end
end

--[[
local C_ZERO = 0
local C_ONE = 1
local C_NEGONE = -1
]]--

testrr("addu", 0, 0, 0x1337, tobit(0x00000000), tobit(0x00000000), tobit(0x00000000), tobit(0x00000000))
testrr("addu", 0, 1, 0x1337, tobit(0x00000000), tobit(0x00000000), tobit(0x00000000), tobit(0x00000001))
testrr("addu", 1, 1, 0x1337, tobit(0x00000000), tobit(0x00000000), tobit(0x00000000), tobit(0x00000002))
testrr("addu", 1, 0, 0x1337, tobit(0x00000000), tobit(0x00000000), tobit(0x00000000), tobit(0x00000001))
testrr("addu", 2, 2, 0x1337, tobit(0x00000000), tobit(0x00000000), tobit(0x00000000), tobit(0x00000004))
testrr("addu", -1, 1, 0x1337, tobit(0x00000000), tobit(0x00000000), tobit(0x00000000), tobit(0x00000000))
testrr("addu", -1, -1, 0x1337, tobit(0x00000000), tobit(0x00000000), tobit(0xffffffff), tobit(0xfffffffe))
--testrr("addiu", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("addiu", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("addiu", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
--testrr("addiu", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("addiu", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000004))
--testrr("addiu", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("addiu", -1, 65535, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("band", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("band", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("band", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("band", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("band", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
testrr("band", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("band", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("bandi", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("bandi", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("bandi", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("bandi", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("bandi", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
--testrr("bandi", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("bandi", -1, 65535, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x0000ffff))
testrr("daddu", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("daddu", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("daddu", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
testrr("daddu", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("daddu", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000004))
testrr("daddu", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("daddu", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
--testrr("daddiu", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("daddiu", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("daddiu", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
--testrr("daddiu", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("daddiu", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000004))
--testrr("daddiu", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("daddiu", -1, 65535, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
--testrr("dsll", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsll", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsll", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
--testrr("dsll", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("dsll", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000008))
--testrr("dsll", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
--testrr("dsll", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0x80000000))
--testrr("dsll32", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsll32", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsll32", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000002), tobit(0x00000000))
--testrr("dsll32", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000001), tobit(0x00000000))
--testrr("dsll32", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000008), tobit(0x00000000))
--testrr("dsll32", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xfffffffe), tobit(0x00000000))
--testrr("dsll32", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0x80000000), tobit(0x00000000))
testrr("dsllv", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsllv", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsllv", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
testrr("dsllv", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("dsllv", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000008))
testrr("dsllv", 1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("dsllv", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x80000000), tobit(0x00000000))
--testrr("dsra", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("dsra", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("dsra", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("dsra32", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra32", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra32", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra32", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra32", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsra32", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("dsra32", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("dsrav", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsrav", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsrav", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsrav", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("dsrav", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsrav", 1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("dsrav", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("dsrl", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("dsrl", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x7fffffff), tobit(0xffffffff))
--testrr("dsrl", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000001), tobit(0xffffffff))
--testrr("dsrl32", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl32", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl32", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl32", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl32", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("dsrl32", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x7fffffff))
--testrr("dsrl32", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("dsrlv", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsrlv", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsrlv", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsrlv", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("dsrlv", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsrlv", 1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x7fffffff), tobit(0xffffffff))
testrr("dsrlv", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("dsubu", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsubu", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("dsubu", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsubu", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("dsubu", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("dsubu", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("dsubu", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("movn", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00001337))
testrr("movn", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("movn", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("movn", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00001337))
testrr("movn", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
testrr("movn", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("movn", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("movz", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("movz", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00001337))
testrr("movz", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00001337))
testrr("movz", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("movz", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00001337))
testrr("movz", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00001337))
testrr("movz", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00001337))
testrr("nor", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("nor", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("nor", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("nor", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("nor", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffd))
testrr("nor", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("nor", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("bor", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("bor", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("bor", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("bor", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("bor", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
testrr("bor", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("bor", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("ori", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("ori", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("ori", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("ori", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("ori", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
--testrr("ori", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("ori", -1, 65535, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("sll", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sll", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sll", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
--testrr("sll", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("sll", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000008))
--testrr("sll", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
--testrr("sll", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0x80000000))
testrr("sllv", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("sllv", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("sllv", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000002))
testrr("sllv", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("sllv", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000008))
testrr("sllv", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("sllv", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0x80000000))
testrr("slt", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("slt", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("slt", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("slt", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("slt", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("slt", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("slt", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("slti", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("slti", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("slti", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("slti", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("slti", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("slti", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("slti", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("sltiu", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sltiu", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("sltiu", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sltiu", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sltiu", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sltiu", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sltiu", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("sltu", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("sltu", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("sltu", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("sltu", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("sltu", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("sltu", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("sltu", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sra", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sra", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sra", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sra", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("sra", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("sra", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("sra", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("srav", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("srav", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("srav", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("srav", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("srav", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("srav", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("srav", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
--testrr("srl", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("srl", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("srl", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("srl", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("srl", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("srl", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x7fffffff))
--testrr("srl", -1, 31, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("srlv", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("srlv", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("srlv", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("srlv", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("srlv", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("srlv", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x7fffffff))
testrr("srlv", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("subu", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("subu", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffffffff))
testrr("subu", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("subu", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("subu", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("subu", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("subu", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("xor", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("xor", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("xor", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("xor", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
testrr("xor", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
testrr("xor", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
testrr("xor", -1, -1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("xori", 0, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("xori", 0, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("xori", 1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("xori", 1, 0, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000001))
--testrr("xori", 2, 2, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0x00000000), tobit(0x00000000))
--testrr("xori", -1, 1, 0x1337, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xfffffffe))
--testrr("xori", -1, 65535, tobit(0x0000133a), tobit(0x00001339), tobit(0xffffffff), tobit(0xffff0000))
